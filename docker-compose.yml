version: '3'

services:
  frontend:
    extends:
      file: docker-compose.base.yml
      service: nx-app-base
    command: npm run serve:app
    ports:
      - 4200:4200
    networks:
      - cognum_network

  server:
    extends:
      file: docker-compose.base.yml
      service: nx-app-base
    command: npm run serve:server
    ports:
      - 3000:3000
      - 8080:8080
    depends_on:
      - mongodb
    networks:
      - cognum_network
    env_file:
      - ./apps/server/.env

  mongodb:
    image: mongo:7-jammy
    ports:
      - 27017:27017
    networks:
      - cognum_network

  postgres:
    image: postgres:latest
    container_name: my-postgres-container
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: Chinook
      POSTGRES_PASSWORD: password
      POSTGRES_USER: renato
    volumes:
      - ./Chinook.sql:/docker-entrypoint-initdb.d/Chinook.sql

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ['CMD', 'etcdctl', 'endpoint', 'health']
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - '9001:9001'
      - '9000:9000'
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.1
    command: ['milvus', 'run', 'standalone']
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9091/healthz']
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - '19530:19530'
      - '9091:9091'
    depends_on:
      - 'etcd'
      - 'minio'

  python-tools:
    container_name: python-tools
    build:
      context: ./apps/python_api
      dockerfile: Dockerfile-python
    image: python:3.11
    command: flask --app app run --host 0.0.0.0 --port 3005
    env_file:
      - ./apps/python_api/.env
    ports:
      - '3005:3005'

networks:
  default:
    name: cognum_network1
  cognum_network:
    driver: bridge
